{
    "version": "https://jsonfeed.org/version/1",
    "title": "九奏Kanano • All posts by \"godot\" tag",
    "description": "",
    "home_page_url": "http://example.com",
    "items": [
        {
            "id": "http://example.com/2023/01/06/%E3%80%90Godot%E3%80%911%E3%80%81%E8%AE%A4%E8%AF%86Godot/",
            "url": "http://example.com/2023/01/06/%E3%80%90Godot%E3%80%911%E3%80%81%E8%AE%A4%E8%AF%86Godot/",
            "title": "【Godot】1、认识Godot",
            "date_published": "2023-01-05T16:00:00.000Z",
            "content_html": "<h1 id=\"1认识编辑器布局\"><a class=\"markdownIt-Anchor\" href=\"#1认识编辑器布局\">#</a> 🔵1. 认识编辑器布局</h1>\n<hr>\n<p><img src=\"https://pic.imgdb.cn/item/63b7a7d2be43e0d30ee99a54.jpg\" alt=\"Godot界面\"></p>\n<h2 id=\"左侧边栏\"><a class=\"markdownIt-Anchor\" href=\"#左侧边栏\">#</a> 🔷左侧边栏</h2>\n<blockquote>\n<p>🔹<strong>文件系统</strong>（FileSystem）：显示当前项目中所有资源文件</p>\n<p>🔹<strong>导入</strong>（Import）：显示文件<mark>系统分栏中所选资源文件</mark>的导入设置</p>\n<p>🔹<strong>场景</strong>（Scene）：按照层级结构显示当前场景中所有节点，可以简单理解为一个游戏里的场景 / 关卡</p>\n</blockquote>\n<h2 id=\"右侧分栏\"><a class=\"markdownIt-Anchor\" href=\"#右侧分栏\">#</a> 🔷右侧分栏</h2>\n<blockquote>\n<p>🔹<strong>属性</strong>（Inspector）：显示<mark>场景分栏中所选节点</mark>的属性</p>\n<p>🔹<strong>节点</strong>（Node）：显示与<mark>场景分栏中所选节点</mark>对应的一些信息</p>\n</blockquote>\n<h2 id=\"中间面板\"><a class=\"markdownIt-Anchor\" href=\"#中间面板\">#</a> 🔷中间面板</h2>\n<blockquote>\n<ul>\n<li>2D：编辑 2D 场景的窗口</li>\n<li>3D：相对的用于编辑 3D 场景</li>\n<li>脚本（Script）：Godot 内置的脚本编辑器，可以使用外置 IDE 替代</li>\n<li>资源库（AsseLib）：可以浏览搜索网络上的资源</li>\n</ul>\n</blockquote>\n<h2 id=\"底部面板\"><a class=\"markdownIt-Anchor\" href=\"#底部面板\">#</a> 🔷底部面板</h2>\n<blockquote>\n<ul>\n<li>调试控制台</li>\n<li>动画编辑器</li>\n<li>混音器</li>\n</ul>\n</blockquote>\n<h1 id=\"2认识游戏对象\"><a class=\"markdownIt-Anchor\" href=\"#2认识游戏对象\">#</a> 🔵2. 认识游戏对象</h1>\n<hr>\n<p>🔷<strong>游戏对象</strong>（Node）：即是场景里包含的一切内容，Godot 的一切操作都是基于 Node 实现</p>\n<p>🔷所有节点都拥有以下特性</p>\n<blockquote>\n<ul>\n<li>可变更的名称</li>\n<li>可编辑的属性</li>\n<li>每帧都可以接受回调进行更新</li>\n<li>使用新的属性 / 函数进行扩展</li>\n<li>可添加为其他节点的子节点</li>\n</ul>\n</blockquote>\n<div class=\"note info flat\"><p>节点会组成一棵树，不同节点拥有不同可能，组合在一起就可以产生复杂的行为</p>\n</div>\n<p>🔷在 Godot 中所有节点的坐标都是<mark>相对坐标</mark>，相对坐标和全局坐标都可以相互转化，如果想直接调节全局坐标，可以调节 global_postion</p>\n<blockquote>\n<ul>\n<li>当子节点坐标为（0,0）时，和父节点相对距离为 0，两节点重合<img src=\"https://pic.imgdb.cn/item/63b7c260be43e0d30e2c7a79.jpg\" alt=\"子节点坐标为（0,0）\"></li>\n<li>当子节点坐标为（100,100）时，子节点便会和父节点错开，此时的子节点世界坐标为 (100+100=200,100+100=200)<img src=\"https://pic.imgdb.cn/item/63b7c3a0be43e0d30e2f1e20.jpg\" alt=\"子节点坐标为（100,100）\"></li>\n</ul>\n</blockquote>\n<div class=\"note info flat\"><p>需要注意的是，全局位置是以场景左上角为原点，而非根节点</p>\n</div>\n<h1 id=\"3节点的基础操作\"><a class=\"markdownIt-Anchor\" href=\"#3节点的基础操作\">#</a> 🔵3. 节点的基础操作</h1>\n<hr>\n<h2 id=\"kbdqkbd-选择工具\"><a class=\"markdownIt-Anchor\" href=\"#kbdqkbd-选择工具\">#</a> 🔷<kbd>Q</kbd> 选择工具</h2>\n<blockquote>\n<ul>\n<li>按住<kbd>Alt</kbd>拖拽缩放点，保持选中目标中心不变进行缩放</li>\n<li>按住<kbd>Shift</kbd>等比缩放</li>\n<li>按住<kbd>Ctrl</kbd>可以进行旋转</li>\n</ul>\n</blockquote>\n<h2 id=\"kbdwkbd-移动工具\"><a class=\"markdownIt-Anchor\" href=\"#kbdwkbd-移动工具\">#</a> 🔷<kbd>W</kbd> 移动工具</h2>\n<h2 id=\"kbdrkbd-移动工具\"><a class=\"markdownIt-Anchor\" href=\"#kbdrkbd-移动工具\">#</a> 🔷<kbd>R</kbd> 移动工具</h2>\n<blockquote>\n<ul>\n<li><kbd>V</kbd> 移动轴心点；<kbd>Shift</kbd>+<kbd>V</kbd>拖拽轴心点</li>\n</ul>\n</blockquote>\n<h2 id=\"kbdskbd-缩放工具\"><a class=\"markdownIt-Anchor\" href=\"#kbdskbd-缩放工具\">#</a> 🔷<kbd>S</kbd> 缩放工具</h2>\n<h2 id=\"kbdfkbd-聚焦选取对象\"><a class=\"markdownIt-Anchor\" href=\"#kbdfkbd-聚焦选取对象\">#</a> 🔷<kbd>F</kbd> 聚焦选取对象</h2>\n<h2 id=\"多节点选择工具\"><a class=\"markdownIt-Anchor\" href=\"#多节点选择工具\">#</a> 🔷多节点选择工具</h2>\n<blockquote>\n<ul>\n<li>当节点间重叠时，可以使用该工具精确选定需要的节点</li>\n</ul>\n</blockquote>\n<h2 id=\"吸附-锁定节点\"><a class=\"markdownIt-Anchor\" href=\"#吸附-锁定节点\">#</a> 🔷吸附 &amp; 锁定节点</h2>\n<blockquote>\n<ul>\n<li><kbd>Shift</kbd>+<kbd>S</kbd> 打开智能吸附</li>\n<li><kbd>Shift</kbd>+<kbd>G</kbd> 打开网格吸附</li>\n</ul>\n<div class=\"note info flat\"><p>在 Godot 中对齐都是以轴心点为基准</p>\n</div>\n<ul>\n<li><kbd>Ctrl</kbd>+<kbd>L</kbd> 锁定节点</li>\n<li><kbd>Ctrl</kbd>+<kbd>G</kbd> 使子节点不可选中</li>\n</ul>\n</blockquote>\n",
            "tags": [
                "Godot",
                "笔记"
            ]
        },
        {
            "id": "http://example.com/2023/01/06/%E3%80%90Godot%E3%80%91%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7%E5%A4%87%E5%BF%98/",
            "url": "http://example.com/2023/01/06/%E3%80%90Godot%E3%80%91%E4%B8%80%E4%BA%9B%E5%B0%8F%E6%8A%80%E5%B7%A7%E5%A4%87%E5%BF%98/",
            "title": "【Godot】一些小技巧的备忘",
            "date_published": "2023-01-05T16:00:00.000Z",
            "content_html": "<h2 id=\"1图片的切割与合并\"><a class=\"markdownIt-Anchor\" href=\"#1图片的切割与合并\">#</a> 🔵1. 图片的切割与合并</h2>\n<h3 id=\"切割\"><a class=\"markdownIt-Anchor\" href=\"#切割\">#</a> 🔷切割</h3>\n<blockquote>\n<ul>\n<li>选中需要切割的图片，进入属性栏，勾选 Region-Enabled</li>\n<li>在底部面板选中 TextureRegion，Snap Mode 选择 Auto Slice，选出需要的区域</li>\n</ul>\n</blockquote>\n<h3 id=\"合并\"><a class=\"markdownIt-Anchor\" href=\"#合并\">#</a> 🔷合并</h3>\n<blockquote>\n<ul>\n<li>在文件系统面板选中需要合并的图片</li>\n<li>进入导入面板，设置为 Import as TextureAtlas，再勾选 Atlas File</li>\n<li>Reimport 后即可使用新素材</li>\n</ul>\n</blockquote>\n",
            "tags": [
                "Godot",
                "笔记"
            ]
        },
        {
            "id": "http://example.com/2023/01/06/%E3%80%90Godot%E3%80%912%E3%80%81%E8%8A%82%E7%82%B9/",
            "url": "http://example.com/2023/01/06/%E3%80%90Godot%E3%80%912%E3%80%81%E8%8A%82%E7%82%B9/",
            "title": "【Godot】2、节点",
            "date_published": "2023-01-05T16:00:00.000Z",
            "content_html": "<h1 id=\"什么是节点\"><a class=\"markdownIt-Anchor\" href=\"#什么是节点\">#</a> 🔵什么是节点</h1>\n<hr>\n<blockquote>\n<p>🔷节点用于实现各种功能，例：Sprite 用于显示图片</p>\n<p>🔷一个子节点的功能可以继承给它的父节点</p>\n</blockquote>\n<h1 id=\"node节点\"><a class=\"markdownIt-Anchor\" href=\"#node节点\">#</a> 🔵Node 节点</h1>\n<hr>\n<blockquote>\n<p>🔷Node 节点是所有节点的根基，Godot 所有节点都继承自 Node 节点，它们都拥有 Node 节点的功能</p>\n<p>🔷Node 节点通常用于挂载脚本</p>\n<p>🔷<strong>Script</strong>：用于挂脚本</p>\n<p>🔷<strong>Mode</strong>：当游戏暂停时的执行状态</p>\n<blockquote>\n<ul>\n<li>Inherit（继承）：继承父节点的处理方法</li>\n<li>Stop（停止）：暂停时该节点停止处理</li>\n<li>Process（处理）：暂停时继续处理</li>\n</ul>\n</blockquote>\n<p>🔷<strong>Priority</strong>：优先级，数字越低优先度越高</p>\n</blockquote>\n<h1 id=\"canvasltem\"><a class=\"markdownIt-Anchor\" href=\"#canvasltem\">#</a> 🔵Canvasltem</h1>\n<hr>\n<blockquote>\n<p>🔷Canvasltem 是直接继承自 Node 的一个节点，所有 2D 和 GUI 节点都继承于它</p>\n<p>🔷Canvasltem 可以被绘制节点，可以设置可视化界面和材质的颜色</p>\n<p>🔷通过设置 Show Behind Parent 可以改变最终渲染到屏幕上的画面顺序</p>\n<p>🔷<strong>Texture</strong>：贴图，附加到附体表面的贴图</p>\n<p>🔷<strong>Material</strong>：材质，实际上就是 shade</p>\n<p>🔷<strong>Shader</strong>：着色器，使用代码来渲染图形</p>\n</blockquote>\n",
            "tags": [
                "Godot",
                "笔记"
            ]
        }
    ]
}